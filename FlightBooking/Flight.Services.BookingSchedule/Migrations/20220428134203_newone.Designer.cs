// <auto-generated />
using System;
using Flight.Services.BookingSchedule.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Flight.Services.BookingSchedule.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220428134203_newone")]
    partial class newone
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Flight.Services.BookingSchedule.Models.Airline", b =>
                {
                    b.Property<int>("flightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contactAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("flightName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("flightId");

                    b.ToTable("Flight");

                    b.HasData(
                        new
                        {
                            flightId = 1,
                            contactAddress = "Mumbai",
                            contactNumber = "1234567890",
                            createdDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            flightName = "Air India",
                            logoURL = "Null",
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            flightId = 2,
                            contactAddress = "Delhi",
                            contactNumber = "1234657890",
                            createdDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            flightName = "Vistara",
                            logoURL = "Null",
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            flightId = 3,
                            contactAddress = "Bangalore",
                            contactNumber = "1243657890",
                            createdDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            flightName = "Go Air",
                            logoURL = "Null",
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            flightId = 4,
                            contactAddress = "Mumbai",
                            contactNumber = "1243658790",
                            createdDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            flightName = "Indigo",
                            logoURL = "Null",
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            flightId = 5,
                            contactAddress = "Chennai",
                            contactNumber = "1253658790",
                            createdDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            flightName = "Spice Jet",
                            logoURL = "Null",
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Flight.Services.BookingSchedule.Models.Booking", b =>
                {
                    b.Property<int>("bookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("arrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("couponCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("departureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("finalticketCost")
                        .HasColumnType("float");

                    b.Property<string>("isActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("noOfSeats")
                        .HasColumnType("int");

                    b.Property<double>("originalTicketCost")
                        .HasColumnType("float");

                    b.Property<int>("scheduleDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("bookingId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Flight.Services.BookingSchedule.Models.Coupon", b =>
                {
                    b.Property<int>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("couponCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("discountPercentage")
                        .HasColumnType("float");

                    b.Property<string>("flightId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("maxAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("validityEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("validityStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CouponId");

                    b.ToTable("coupons");
                });

            modelBuilder.Entity("Flight.Services.BookingSchedule.Models.Passenger", b =>
                {
                    b.Property<int>("passengerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("bookingId")
                        .HasColumnType("int");

                    b.Property<string>("optForMeal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("passengerAge")
                        .HasColumnType("int");

                    b.Property<string>("passengerGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passengerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeOfSeats")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("passengerId");

                    b.HasIndex("bookingId");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("Flight.Services.BookingSchedule.Models.ScheduleDetail", b =>
                {
                    b.Property<int>("scheduleDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("availableBusinessClassSeats")
                        .HasColumnType("int");

                    b.Property<int>("availableEconomySeats")
                        .HasColumnType("int");

                    b.Property<int>("availableTotalSeats")
                        .HasColumnType("int");

                    b.Property<double>("businessClassCost")
                        .HasColumnType("float");

                    b.Property<int>("businessClassSeats")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("economyCost")
                        .HasColumnType("float");

                    b.Property<int>("economySeats")
                        .HasColumnType("int");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("flightId")
                        .HasColumnType("int");

                    b.Property<string>("flightnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fromPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instrumentused")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("meal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("noOfRows")
                        .HasColumnType("int");

                    b.Property<string>("scheduledDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("toPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalSeats")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("scheduleDetailsId");

                    b.ToTable("ScheduleDetails");
                });

            modelBuilder.Entity("Flight.Services.BookingSchedule.Models.Passenger", b =>
                {
                    b.HasOne("Flight.Services.BookingSchedule.Models.Booking", null)
                        .WithMany("passenger")
                        .HasForeignKey("bookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Flight.Services.BookingSchedule.Models.Booking", b =>
                {
                    b.Navigation("passenger");
                });
#pragma warning restore 612, 618
        }
    }
}
